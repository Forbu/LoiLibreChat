{"ast":null,"code":"var _jsxFileName = \"/app/loilibrechat/src/components/ModelCarac.js\",\n  _s = $RefreshSig$();\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelCarac = props => {\n  _s();\n  const [modelCarac, setModelCarac] = useState(\"default\");\n  const [selectedDatabase, setSelectedDatabase] = useState(null);\n\n  // You can replace this with your actual database options\n  const databaseOptions = [\"Database 1\", \"Database 2\", \"Database 3\"\n  // Add more database options as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'fixed',\n      left: '20px',\n      top: '20px',\n      zIndex: 1000,\n      display: 'flex',\n      flexDirection: 'row',\n      gap: '10px',\n      width: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      sx: {\n        width: 200\n      },\n      value: \"default\",\n      onChange: (event, newValue) => setModelCarac(newValue),\n      options: [],\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Model Carac\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      sx: {\n        width: 200\n      },\n      value: selectedDatabase,\n      onChange: (event, newValue) => setSelectedDatabase(newValue),\n      options: databaseOptions,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"RAG Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(ModelCarac, \"zpMbZGXPG3Q695TG0mA9JlhJDDw=\");\n_c = ModelCarac;\nexport default ModelCarac;\nvar _c;\n$RefreshReg$(_c, \"ModelCarac\");","map":{"version":3,"names":["Autocomplete","TextField","Box","useState","jsxDEV","_jsxDEV","ModelCarac","props","_s","modelCarac","setModelCarac","selectedDatabase","setSelectedDatabase","databaseOptions","sx","position","left","top","zIndex","display","flexDirection","gap","width","children","value","onChange","event","newValue","options","renderInput","params","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/loilibrechat/src/components/ModelCarac.js"],"sourcesContent":["import Autocomplete from '@mui/material/Autocomplete';   \nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\n\nconst ModelCarac = (props) => {\n    const [modelCarac, setModelCarac] = useState(\"default\");\n    const [selectedDatabase, setSelectedDatabase] = useState(null);\n\n    // You can replace this with your actual database options\n    const databaseOptions = [\n        \"Database 1\",\n        \"Database 2\",\n        \"Database 3\",\n        // Add more database options as needed\n    ];\n\n    return (\n        <Box sx={{ \n            position: 'fixed',\n            left: '20px',\n            top: '20px',\n            zIndex: 1000,\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '10px',\n            width: 'auto'\n        }}>\n            <Autocomplete\n                sx={{ width: 200 }}\n                value=\"default\"\n                onChange={(event, newValue) => setModelCarac(newValue)}\n                options={[]}\n                renderInput={(params) => <TextField {...params} label=\"Model Carac\" />}\n            />\n            <Autocomplete\n                sx={{ width: 200 }}\n                value={selectedDatabase}\n                onChange={(event, newValue) => setSelectedDatabase(newValue)}\n                options={databaseOptions}\n                renderInput={(params) => <TextField {...params} label=\"RAG Database\" />}\n            />\n        </Box>\n    );\n}\n\nexport default ModelCarac;"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAMU,eAAe,GAAG,CACpB,YAAY,EACZ,YAAY,EACZ;EACA;EAAA,CACH;EAED,oBACIR,OAAA,CAACH,GAAG;IAACY,EAAE,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,IAAI,EAAE,MAAM;MACZC,GAAG,EAAE,MAAM;MACXC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,KAAK;MACpBC,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE;IACX,CAAE;IAAAC,QAAA,gBACElB,OAAA,CAACL,YAAY;MACTc,EAAE,EAAE;QAAEQ,KAAK,EAAE;MAAI,CAAE;MACnBE,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKjB,aAAa,CAACiB,QAAQ,CAAE;MACvDC,OAAO,EAAE,EAAG;MACZC,WAAW,EAAGC,MAAM,iBAAKzB,OAAA,CAACJ,SAAS;QAAA,GAAK6B,MAAM;QAAEC,KAAK,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACF9B,OAAA,CAACL,YAAY;MACTc,EAAE,EAAE;QAAEQ,KAAK,EAAE;MAAI,CAAE;MACnBE,KAAK,EAAEb,gBAAiB;MACxBc,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKf,mBAAmB,CAACe,QAAQ,CAAE;MAC7DC,OAAO,EAAEf,eAAgB;MACzBgB,WAAW,EAAGC,MAAM,iBAAKzB,OAAA,CAACJ,SAAS;QAAA,GAAK6B,MAAM;QAAEC,KAAK,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAA3B,EAAA,CAvCKF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}